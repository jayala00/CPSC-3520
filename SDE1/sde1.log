uA(L,["u","u"],[]).


L = 2 .

uA(L,["d"],[]).


false.

uA(L,["u","d"],[]).


false.

rA(L,["r","r","r","r"],[]).


L = 4 .

rA(L,["u","u","u","u"],[]).


false.

rA(L,["R"],[]).


false.

dA(L,["d","d","d","d"],[]).


L = 4 .

dA(L,["d","d","d","r"],[]).


false.

dA(L,["d","d","d","D"],[]).


false.

lA(L,["l","l","l","l"],[]).


L = 4 .

lA(L,["l","l","l","L"],[]).


false.

lA(L,["l","l","l","u"],[]).


false.

sq(["u","u","r","d","l"],[]).


true .

sq(["u","u","u","r","d","l"],[]).


true .

sq(["u","u","u","r","d","l","u"],[]).


false.

sqA(["u","r","d","l"],[]).


true .

sqA(["u","u","r","d","l"],[]).


false.

sqA(["u","u","r","r","d","d","l","l"],[]).


true .

rctA(["u","u","r","d","l"],[]).


false.

rctA(["u","u","r","d","d","l"],[]).


true .

rctA(["u","u","r","d","l","l"],[]).


false.

rctA(["u","u","r","r","d","d","l","l"],[]).


true .

grect(3,3,Var).


Var = ["u", "u", "u", "r", "r", "r", "d", "d", "d"|...] .

grect(1,4,Var2).


Var2 = ["u", "r", "r", "r", "r", "d", "l", "l", "l"|...] .

grect(1,0,Var2).


false.

m30A(M,["p240","m30"],[]).


false.

m30A(M,["m30","m30"],[]).


M = 2 .

m30A(M,["m30","m30","m30"],[]).


M = 3 .

p240A(M,["m30","m30","m30"],[]).


false.

p240A(M,["p240","p240","p240"],[]).


M = 3 .

p240A(M,[],[]).


M = 0 .

eqtriA(["u","p240","m30"],[]).


false.

eqtriA(["u","m30","p240"],[]).


true .

one_shift([3,4,5,6],O).


O = [4, 5, 6, 3].

one_shift([3,4,5,6],O), one_shift(O,L).


O = [4, 5, 6, 3],
L = [5, 6, 3, 4].

one_shift([3,4,5,6],O), one_shift(O,L), one_shift(L,Q).


O = [4, 5, 6, 3],
L = [5, 6, 3, 4],
Q = [6, 3, 4, 5].

length([2,3,4],L), all_shifts([2,3,4],O,L,1).


L = 3,
O = [[3, 4, 2], [4, 2, 3]] .

length([2,3],L), all_shifts([2,3],O,L,1).


L = 2,
O = [[3, 2]] .

length([2,3,4,5],L), all_shifts([2,3,4,5],O,L,1).


L = 4,
O = [[3, 4, 5, 2], [4, 5, 2, 3], [5, 2, 3, 4]] .

start_shifts(["u","u","l","d","l"],Var).


Var = [["u", "l", "d", "l", "u"], ["l", "d", "l", "u", "u"], ["d", "l", "u", "u", "l"], ["l", "u", "u", "l", "d"]] .

start_shifts(["u","u","l"],Var).


Var = [["u", "l", "u"], ["l", "u", "u"]] .

start_shifts([1,3,5,7,9],Var).


Var = [[3, 5, 7, 9, 1], [5, 7, 9, 1, 3], [7, 9, 1, 3, 5], [9, 1, 3, 5, 7]] .

all_cases([3,4,5],Var).


Var = [[3, 4, 5], [4, 5, 3], [5, 3, 4]] .

all_cases(["u","r","d","l"],Var).


Var = [["u", "r", "d", "l"], ["r", "d", "l", "u"], ["d", "l", "u", "r"], ["l", "u", "r", "d"]] .

all_cases(["u","r","d","l","u","r","d","l"],Var).


Var = [["u", "r", "d", "l", "u", "r", "d", "l"], ["r", "d", "l", "u", "r", "d", "l"|...], ["d", "l", "u", "r", "d", "l"|...], ["l", "u", "r", "d", "l"|...], ["u", "r", "d", "l"|...], ["r", "d", "l"|...], ["d", "l"|...], ["l"|...]] .

all_cases(["u","r","d","l","u","r","d","l"],Var), try_all_sqA(Var).


false.

all_cases(["u","r","d","l"],Var), try_all_sqA(Var).


Cyclic Shift: ["u","r","d","l"] is a square.
Var = [["u", "r", "d", "l"], ["r", "d", "l", "u"], ["d", "l", "u", "r"], ["l", "u", "r", "d"]] .

all_cases(["u","r","d","l","u"],Var), try_all_sqA(Var).


false.

all_cases(["u","r","r","d","d","l","l","u"],Var), try_all_sqA(Var).


Cyclic Shift: ["u","u","r","r","d","d","l","l"] is a square.
Var = [["u", "r", "r", "d", "d", "l", "l", "u"], ["r", "r", "d", "d", "l", "l", "u"|...], ["r", "d", "d", "l", "l", "u"|...], ["d", "d", "l", "l", "u"|...], ["d", "l", "l", "u"|...], ["l", "l", "u"|...], ["l", "u"|...], ["u"|...]] .

all_cases(["u","r","r","d","d","l","l","u"],Var), try_all_rctA(Var).


Cyclic Shift: ["u","u","r","r","d","d","l","l"] is a rectangle.
Var = [["u", "r", "r", "d", "d", "l", "l", "u"], ["r", "r", "d", "d", "l", "l", "u"|...], ["r", "d", "d", "l", "l", "u"|...], ["d", "d", "l", "l", "u"|...], ["d", "l", "l", "u"|...], ["l", "l", "u"|...], ["l", "u"|...], ["u"|...]] .

all_cases(["u","r","d","d","l","u"],Var), try_all_rctA(Var).


Cyclic Shift: ["u","u","r","d","d","l"] is a rectangle.
Var = [["u", "r", "d", "d", "l", "u"], ["r", "d", "d", "l", "u", "u"], ["d", "d", "l", "u", "u", "r"], ["d", "l", "u", "u", "r"|...], ["l", "u", "u", "r"|...], ["u", "u", "r"|...]] .

all_cases(["u","r","d","d","l","u","u"],Var), try_all_rctA(Var).


false.

all_cases(["u","r","d","d","l"],Var), try_all_eqtriA(Var).


false.

all_cases(["u","m30","p240","u"],Var), try_all_eqtriA(Var).


false.

all_cases(["u","m30","m30","p240","p240","u"],Var), try_all_eqtriA(Var).


Cyclic Shift: ["u","u","m30","m30","p240","p240"] is an equilateral triangle.
Var = [["u", "m30", "m30", "p240", "p240", "u"], ["m30", "m30", "p240", "p240", "u", "u"], ["m30", "p240", "p240", "u", "u", "m30"], ["p240", "p240", "u", "u", "m30"|...], ["p240", "u", "u", "m30"|...], ["u", "u", "m30"|...]] .

all_cases(["m30","p240","u"],Var), try_all_eqtriA(Var).


Cyclic Shift: ["u","m30","p240"] is an equilateral triangle.
Var = [["m30", "p240", "u"], ["p240", "u", "m30"], ["u", "m30", "p240"]] .
